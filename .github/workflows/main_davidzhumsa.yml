name: anitrack-web

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  NODE_VERSION: '18.x'
  IMAGE: anitrack-web
  BACKEND_URL: none

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './frontend'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test

  docker:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to container registry
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: frontend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.OWNER_LC  }}/${{ env.IMAGE  }}:${{ github.sha }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: none
  #   needs: docker

  #   steps:
  #   - name: Set lower case owner name
  #     run: |
  #       echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
  #     env:
  #       OWNER: '${{ github.repository_owner }}'

  #   - name: 'Deploy to Azure Web App'
  #     id: deploy-to-webapp
  #     uses: azure/webapps-deploy@v2
  #     with:
  #       app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #       publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_FRONTEND }}
  #       images: '${{ env.REGISTRY }}/${{ env.OWNER_LC }}/${{ env.IMAGE }}:${{ github.sha }}'
